# Apache role
#
# Install and configure the Apache server on an Ubuntu machine

    - name: install apache2
      apt: name=apache2 update_cache=yes state=latest

    - name: enable mod_rewrite in apache.
      shell: "a2enmod rewrite"
      register: a2enmodrewrite
      changed_when: "'already enabled' not in a2enmodrewrite.stdout"

# mode: <file-mode> # file-mode can be numbers like 0644, or symbols like u=rw,g=r,o=r, or symbol changes u+rw,g-wx,o-rwx.

    - name: Create a directory for each hosted domain if it does not exist
      file:
        path: "/var/www/{{lookup('env','INFRA_DOMAIN')}}"
        state: directory
        mode: u=rwx,g=rx,o=rx

    - name: Create a default home page
      copy:
        src: "/var/www/html/index.html"
        dest: "/var/www/{{lookup('env','INFRA_DOMAIN')}}"
        remote_src: true

    - name: Personalize the default home page
      replace:
        path: "/var/www/{{lookup('env','INFRA_DOMAIN')}}/index.html"
        regexp: 'It works!'
        replace: "{{lookup('env','INFRA_DOMAIN')}}"

    - name: Set a hostname
      ansible.builtin.hostname:
        name:  "tf-{{ lookup('env','ANSIBLE_HOST') }}" 

    - name: check that the server can be reached
      uri:
        url: "http://{{lookup('env','INFRA_DOMAIN')}}"
        follow_redirects: yes

    - name:  check that the server can be reached, copy default page in /tmp
      get_url:
        url:  "http://{{lookup('env','INFRA_DOMAIN')}}"
        dest: /tmp/index.html
        timeout: 30

# Setting up virtual hosts

# Create an apache configuration file for each domain
    - name: Create an apache configuration file for each domain
      template:
        src: "templates/vhost.conf.j2"
        dest: "/etc/apache2/sites-available/{{lookup('env','INFRA_DOMAIN')}}.conf"
        mode: u=rw,g=r,o=r

# Enable the virtual host
    - name: Enable the virtual host
      shell: "a2ensite {{lookup('env','INFRA_DOMAIN')}}"
      register: a2ensite
      changed_when: "'already enabled' not in a2ensite.stdout"

# Disable the default host
    - name: Disable the default host
      shell: "a2dissite 000-default"
      register: a2dissite
      changed_when: "'already disabled' not in a2dissite.stdout"

    - name: Log the installation state
      lineinfile:
        dest: /home/ubuntu/installed.txt
        line: "{{ lookup('pipe', 'date') }} -> apache configured"
        state: present
        insertafter: EOF
        create: True