# Apache role
#
# Install and configure the Apache server on an Ubuntu machine

    - name: install apache2
      apt: name=apache2 update_cache=yes state=latest

    - name: enable mod_rewrite in apache.
      shell: "a2enmod rewrite"
      register: a2enmodrewrite
      changed_when: "'already enabled' not in a2enmodrewrite.stdout"

    - name: check that the server can be reached
      uri:
        url: "http://{{inventory_hostname}}"
        follow_redirects: yes

    - name:  check that the server can be reached, copy default page in /tmp
      get_url:
        url:  "http://{{inventory_hostname}}"
        dest: /tmp/index.html
        timeout: 30

# mode: <file-mode> # file-mode can be numbers like 0644, or symbols like u=rw,g=r,o=r, or symbol changes u+rw,g-wx,o-rwx.

    - name: Create a directory for each hosted domain if it does not exist
      file:
        path: "/var/www/{{domain_name}}"
        state: directory
        mode: u=rwx,g=rx,o=rx

    - name: Create a default home page
      copy:
        src: "/var/www/html/index.html"
        dest: "/var/www/{{domain_name}}"
        remote_src: true

    - name: Personalize the default home page
      replace:
        path: "/var/www/{{domain_name}}/index.html"
        regexp: 'It works!'
        replace: "{{domain_name}}"

# Change the default SSL 
    - name: Print apache information
      debug:
        msg: 
        - "Apache configuration file: {{apache_conf_file}}"
        - "SSL certificate file: {{ssl_cert_file}}"
        - "SSL key file: {{ssl_key_file}}"

    - name: Update Apache configuration to enable HTTPS
      lineinfile:
        dest: "{{ apache_conf_file }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - {regexp: "^SSLCertificateFile.*$", line: "SSLCertificateFile {{ ssl_cert_file }}"}
        - {regexp: "^SSLCertificateKeyFile.*$", line: "SSLCertificateKeyFile {{ ssl_key_file }}"}          
      notify:
        - restart apache2

# Create virtual hosts
