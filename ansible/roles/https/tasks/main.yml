# https role
#
# Enable HTTPS in apache

# It is a very bad id to delete the certificate and key files are
# they are not regenerated as long as the certificate is still valid.
#
# I wonder if it is a good idea to invoke certbot on the controlled host,
# May be that it would be smarter to create the certificate on the control node and
# push the files on the controlled nodes.

    - name: domain name
      debug:
        msg: "domain = {{lookup('env','INFRA_DOMAIN')}}"
        
    - name: install certbot using apt
      apt:
        name: python3-certbot-apache
        state: present

    - name: stop apache2
      service: name=apache2 state=stopped  

# The following step is currently commented out because it generates an eoor when the certificate has alredy been generated for a domain. Todo: make it idempotent
#    - name: generate certificate
#      become: yes
#      command: certbot certonly --standalone --non-interactive --email frederic.peignot@free.fr --agree-tos -d {{lookup('env','INFRA_DOMAIN')}}
      
    - name: Enable the Apache2 module ssl
      apache2_module:
        state: present
        name: ssl

# Change the default SSL 
    - name: Print apache information
      debug:
        msg: 
        - "Apache configuration file: {{apache_conf_file}}"
        - "SSL certificate file: {{ssl_cert_file}}"
        - "SSL key file: {{ssl_key_file}}"

    - name: Update Apache configuration to enable HTTPS
      lineinfile:
        path: "{{ apache_conf_file }}"
        regexp: "^SSLCertificateFile.*$"
        line: "SSLCertificateFile {{ ssl_cert_file }}"
      notify:
        - restart apache2

    - name: Update Apache configuration to enable HTTPS
      lineinfile:
        path: "{{ apache_conf_file }}"
        regexp: "^SSLCertificateKeyFile.*$"
        line: "SSLCertificateKeyFile {{ ssl_key_file }}"
      notify:
        - restart apache2

    - name : enable default-ssl
      command: a2ensite default-ssl
      notify:
        - restart apache2

# Create virtual hosts

# Create an apache configuration file for each domain
    - name: Create an apache configuration file for each domain
      template:
        src: "templates/vhost_ssl.conf.j2"
        dest: "/etc/apache2/sites-available/{{lookup('env','INFRA_DOMAIN')}}.conf"
        mode: u=rw,g=r,o=r

# Enable the virtual host
    - name: Enable the virtual host
      shell: "a2ensite {{lookup('env','INFRA_DOMAIN')}}"
      register: a2ensite
      changed_when: "'already enabled' not in a2ensite.stdout"
      notify:
        - restart apache2

# Disable the default host
    - name: Disable the default ssl
      shell: "a2dissite default-ssl"
      register: a2dissite
      changed_when: "'already disabled' not in a2dissite.stdout"
      notify:
        - restart apache2

    - name: restart apache2
      service: name=apache2 state=restarted  

# Test HTTPS access
    - name: check that the server can be reached
      uri:
        url: "https://{{lookup('env','INFRA_DOMAIN')}}"
        follow_redirects: yes

    - name:  check that the server can be reached, copy default page in /tmp
      get_url:
        url:  "https://{{lookup('env','INFRA_DOMAIN')}}"
        dest: /tmp/index.html
        timeout: 30
